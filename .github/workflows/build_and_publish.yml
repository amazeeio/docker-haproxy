name: Build & Publish
on:
  push:
    branches:
      - "master"
      - "dev"
jobs:
  build_and_publish:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Check credentials
        id: docker-credentials
        run: |
          echo ::set-output name=defined::$(test -n "${{ secrets.DOCKERHUB_USERNAME }}" && echo true || echo false)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: steps.docker-credentials.outputs.defined == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta_haproxy
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository_owner }}/haproxy
            ghcr.io/${{ github.repository_owner }}/haproxy
      - name: Build and push haproxy
        if: steps.docker-credentials.outputs.defined == 'true'
        id: docker_build_haproxy
        uses: docker/build-push-action@v2
        with:
          context: ./haproxy
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_haproxy.outputs.tags }}
          labels: ${{ steps.meta_haproxy.outputs.labels }}
      - name: Docker meta
        id: meta_dnsmasq
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository_owner }}/dnsmasq
            ghcr.io/${{ github.repository_owner }}/dnsmasq
      - name: Build and push dnsmasq
        if: steps.docker-credentials.outputs.defined == 'true'
        id: docker_build_dnsmasq
        uses: docker/build-push-action@v2
        with:
          context: ./dnsmasq
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_dnsmasq.outputs.tags }}
          labels: ${{ steps.meta_dnsmasq.outputs.labels }}
      - name: Docker meta
        id: meta_mailhog
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository_owner }}/mailhog
            ghcr.io/${{ github.repository_owner }}/mailhog
      - name: Build and push mailhog
        if: steps.docker-credentials.outputs.defined == 'true'
        id: docker_build_mailhog
        uses: docker/build-push-action@v2
        with:
          context: ./mailhog
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_mailhog.outputs.tags }}
          labels: ${{ steps.meta_mailhog.outputs.labels }}
      - name: Docker meta
        id: meta_ssh-agent
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository_owner }}/ssh-agent
            ghcr.io/${{ github.repository_owner }}/ssh-agent
      - name: Build and push ssh-agent
        if: steps.docker-credentials.outputs.defined == 'true'
        id: docker_build_ssh-agent
        uses: docker/build-push-action@v2
        with:
          context: ./ssh-agent
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_ssh-agent.outputs.tags }}
          labels: ${{ steps.meta_ssh-agent.outputs.labels }}
      - name: Image digest
        run: |
          echo ${{ steps.docker_build_haproxy.outputs.digest }}
          echo ${{ steps.docker_build_dnsmasq.outputs.digest }}
          echo ${{ steps.docker_build_mailhog.outputs.digest }}
          echo ${{ steps.docker_build_ssh-agent.outputs.digest }}